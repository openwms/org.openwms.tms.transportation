spring:
  application:
    name: tms-service
  cloud:
    discovery:
      enabled: true
  security:
    user:
      password: sa
      name: user
  jpa:
    show-sql: false
    open-in-view: false
    database: h2
    properties:
      hibernate:
        hbm2ddl:
          import_files: transportation.sql
      org:
        hibernate:
          envers:
            audit_strategy: org.hibernate.envers.strategy.DefaultAuditStrategy
            audit_table_suffix: _LOG
            revision_field_name: C_REV
            revision_type_field_name: C_REV_TYPE
            audit_strategy_validity_end_rev_field_name: C_REV_END
            audit_strategy_validity_revend_timestamp_field_name: C_REVEND_TSTMP
            store_data_at_delete: true
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZ
  main:
    allow-bean-definition-overriding: true
  zipkin:
    sender:
      type: web

owms:
  eureka:
    url: http://user:sa@localhost:8761
    zone: ${owms.eureka.url}/eureka/
  srv:
    protocol: http
    hostname: localhost
  tms:
    block-tu-deletion-states:
  transportation:
    serialization: json

server:
  port: ${PORT:8131}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    rabbit:
      enabled: false
  metrics:
    web:
      server:
        request:
          autotime:
            enabled: true
    export:
      prometheus:
        enabled: true
  info:
    git:
      mode: full

logging:
  file:
    name: BOOT-TMS-Transportation.log
    path: "/tmp/owms"

---
spring:
  config:
    activate:
      on-profile: ASYNCHRONOUS
  rabbitmq:
    listener:
      simple:
        retry:
          max-attempts: 3
          enabled: true
          initial-interval: 1s
          max-interval: 1s

management:
  health:
    rabbit:
      enabled: true

owms:
  commands:
    common:
      tu:
        exchange-name: common.tu.commands
        routing-key: common.tu.command.out.removing
        queue-name: tms-tu-commands-queue
    tms:
      to:
        exchange-name: tms.commands
        routing-key: to.*
        queue-name: tms-to-commands
  events:
    tms:
      to:
        exchange-name: tms.events
  requests:
    tms:
      to:
        exchange-name: tms.requests
        routing-key: response.state.change
        queue-name: tms-to-requests
  transportation:
    dead-letter:
      exchange-name: dle.transportation
      queue-name: tms-dl-queue
    serialization: json

---
spring:
  config:
    activate:
      on-profile: DISTRIBUTED
    import: configserver:http://localhost:8099
  cloud:
#    config:
#      discovery:
#        enabled: true
#      enabled: true
#      fail-fast: true # true means retry
    discovery:
      enabled: true

eureka:
  client:
    healthcheck:
      enabled: true
    instance-info-replication-interval-seconds: 10 # default is 30
    service-url:
      defaultZone: ${owms.eureka.zone}  # Must be camelCase
  instance:
    hostname: ${owms.srv.hostname}
    secure-port-enabled: false
    non-secure-port-enabled: true
    metadata-map:
      username: ${spring.security.user.name}
      password: ${spring.security.user.password}
      protocol: ${owms.srv.protocol}
      zone: ${owms.eureka.zone}

feign:
  httpclient:
    connection-timeout: 30000
    connection-timer-repeat: 30000
ribbon:
  connectTimeout: 30000
  ReadTimeout: 30000

---
spring:
  config:
    activate:
      on-profile: HEROKU
  main:
    banner-mode: "OFF"

owms:
  srv:
    protocol: https
    hostname: openwms-tms-transportation.herokuapp.com

eureka:
  instance:
    hostname: ${owms.srv.hostname}
    secure-port-enabled: true
    non-secure-port-enabled: false
    statusPageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/info
    healthCheckUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/health
    homePageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/

---
spring:
  config:
    activate:
      on-profile: TEST
  cloud:
    config:
      fail-fast: false
  main:
    banner-mode: "off"
  zipkin:
    enabled: false
    discovery-client-enabled: false
    sender:
      type: rabbit
  jpa:
    show-sql: false

---
spring:
  config:
    activate:
      on-profile: TESTPG
  jpa:
    database: postgresql
    generate-ddl: true
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQL9Dialect
      hibernate.temp.use_jdbc_metadata_defaults: false
      hibernate.default_schema: public
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql:testdb
    username: KARL
    password: KARL
